services:

  # Dagster Images
  docker_postgresql_FootballDataPlatform:
    image: postgres:11
    container_name: docker_postgresql_FootballDataPlatform
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - network_FootballDataPlatform

  docker_dagster_ui:
    build:
      context: .
      dockerfile: ./Dockerfile
    entrypoint:
      - dagster-webserver
      - -h
      - "0.0.0.0"
      - -p
      - "3000"
      - -w
      - workspace.yaml
    container_name: docker_dagster_ui_FootballDataPlatform
    image: image_dagster_ui
    expose:
      - "3000"
    ports:
      - "3000:3000"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - network_FootballDataPlatform

  docker_daemon:
    build:
      context: .
      dockerfile: ./Dockerfile
    entrypoint:
      - dagster-daemon
      - run
    container_name: docker_daemon_FootballDataPlatform
    image: image_dagster_daemon
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      API_FOOTBALL_KEY: ${API_FOOTBALL_KEY}
      POSTGRES_DB: ${POSTGRES_DB}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - network_FootballDataPlatform
    depends_on:
      - docker_postgresql_FootballDataPlatform
  

  ## CODE LOCATIONS
  integration_layer: 
    build:
      context: .
      dockerfile: ./location_integration_layer/Dockerfile
    container_name: integration_layer_FootballDataPlatform
    image: image_integration_layer
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      MOTHERDUCK_PATH: ${MOTHERDUCK_PATH}
      DUCKDB_DB: ${DUCKDB_DB}
      API_FOOTBALL_KEY: ${API_FOOTBALL_KEY}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
      ENVIRONMENT: ${ENVIRONMENT}
      DAGSTER_CURRENT_IMAGE: "image_integration_layer"
    expose:
      - "4001"
    networks:
      - network_FootballDataPlatform

  dbt_layer: 
    build:
      context: .
      dockerfile: ./location_dbt_layer/Dockerfile
      args: 
        - MOTHERDUCK_PATH_ARG=${MOTHERDUCK_PATH}
        - ENVIRONMENT_ARG=${ENVIRONMENT}
        - DUCKDB_DB_ARG=${DUCKDB_DB}
    container_name: dbt_layer_FootballDataPlatform
    image: image_dbt_layer
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      MOTHERDUCK_PATH: ${MOTHERDUCK_PATH}
      DUCKDB_DB: ${DUCKDB_DB}
      API_FOOTBALL_KEY: ${API_FOOTBALL_KEY}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
      ENVIRONMENT: ${ENVIRONMENT}
      DAGSTER_CURRENT_IMAGE: "image_dbt_layer"
    expose:
      - "4002"
    networks:
      - network_FootballDataPlatform

volumes: 
  pgdata:

networks:
  network_FootballDataPlatform:
    driver: bridge
    name: network_FootballDataPlatform